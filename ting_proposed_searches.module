<?php

/**
 * @file
 * Ting Proposed Search.
 */

/**
 * Implements hook_menu().
 */
function ting_proposed_searches_menu() {
  $items = array();

  $items['admin/config/ting/proposed_searches'] = array(
    'title' => 'Ting Proposed Searches config',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ting_proposed_searches_admin'),
    'access callback' => TRUE,
    'file' => 'ting_proposed_searches.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Get settings, and merge with defaults.
 *
 * @return array
 *   Array of settings.
 */
function ting_proposed_searches_settings() {
  $base_settings['index'] = 'scanterm.default';
  $base_settings['facetIndex'] = 'scanphrase.default';
  $base_settings['filterQuery'] = NULL;

  $base_settings['agency']  = variable_get('ting_agency', NULL);
  $base_settings['profile'] = variable_get('ting_search_profile', NULL);
  $base_settings['maxSuggestions'] = 10;
  $base_settings['maxTime'] = 2000;

  $base_settings['highlight'] = NULL;
  $base_settings['highlight.pre'] = '<em>';
  $base_settings['highlight.post'] = '</em>';

  $defaults = variable_get('ting_proposed_searches_settings', array());

  $settings = array();
  $settings = array_merge($base_settings, $defaults);

  return $settings;
}

/**
 * Forming result block.
 */
function ting_proposed_searches_make_item_list($items) {
  $links = array();

  // Make a list of suggesttions.
  foreach ($items as $suggest) {
    $zero_hit_link = array(
      '#theme' => 'link',
      '#path' => "search/ting/{$suggest}",
      '#weight' => 0,
      '#text' => $suggest,
      '#options' => array(
        'attributes' => array(
          'class' => array(
            'opensuggest-link',
          ),
        ),
        'html' => TRUE,
      ),
    );
    $links[] = drupal_render($zero_hit_link);
  }

  // Suggestion block wrapper.
  $render['wrapper'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#attributes' => array(
      'class' => array('opensuggest-wrapper'),
    ),
  );

  // Label for suggestions.
  $render['label'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => t('Did you mean:'),
    '#attributes' => array(
      'class' => array('opensuggest-label'),
    ),
  );

  // Render array of suggestions.
  $render['suggest_list'] = array(
    '#theme' => 'item_list',
    '#type' => 'ul',
    '#attributes' => array(
      'class' => array('links', 'opensuggest-links'),
    ),
    '#items' => $links,
  );

  drupal_add_css(drupal_get_path('module', 'ting_proposed_searches') . '/css/ting_proposed_searches.css');

  return $render;
}

/**
 * Implements hook_preprocess().
 */
function ting_proposed_searches_preprocess(&$variables, $hook) {
  if ($hook == "panels_pane" && $variables['pane']->type == 'search_result') {
    $search_result = drupal_static('ting_search_results');

    if ($search_result->numTotalObjects == '0') {
      $search_arg = $variables['display']->args[0];
      $settings = variable_get('ting_proposed_searches_settings', array());
      $url = variable_get('ting_proposed_searches_rest_url', NULL);

      $value_vars = array();
      $value_vars['index'] = $settings['index'];
      $value_vars['facetIndex'] = $settings['facetIndex'];
      $value_vars['agency'] = $settings['agency'];
      $value_vars['profile'] = $settings['profile'];
      $url = $url . '/facetSpell';
      $settings['highlight'] = ($settings['highlight']) ? 'true' : NULL;
      $options['query'] = array('query' => check_plain($search_arg)) + $value_vars + $settings;
      $options['maxTime'] = 300;
      $url = url($url, $options);

      $request = drupal_http_request($url);
      $result = json_decode($request->data);

      $items = array();
      if (!empty($result->suggestions)) {
        foreach ($result->suggestions as $suggestion) {
          $items[$suggestion->phrase] = $suggestion->phrase;
        }
        $link_items = ting_proposed_searches_make_item_list($items);
      }

      $content = $variables['content'];
      if (!empty($link_items)) {
        $content .= render($link_items);
      }

      $variables['content'] = $content;
    }
  }
}
