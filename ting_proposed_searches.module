<?php
/**
 * @file
 * Ting Proposed Search module logic.
 */

/**
 * Creates renderable array of suggestions.
 *
 * @param $items
 *   Suggested items.
 *
 * @return array
 */
function ting_proposed_searches_make_item_list(array $items) {
  $links = [];

  // Make a list of suggesttions.
  foreach ($items as $key => $suggest) {
    $zero_hit_link = [
      '#theme' => 'link',
      '#path' => "search/ting/{$suggest}",
      '#weight' => 0,
      '#text' => $key,
      '#options' => [
        'attributes' => [
          'class' => [
            'opensuggest-link',
          ],
        ],
        'html' => TRUE,
      ],
    ];
    $links[] = drupal_render($zero_hit_link);
  }

  // Label for suggestions.
  $render['label'] = [
    '#type' => 'html_tag',
    '#tag' => 'strong',
    '#value' => t('Did you mean:'),
    '#prefix' => '<div class="opensuggest-wrapper">',
  ];

  // Render array of suggestions.
  $render['suggest_list'] = [
    '#theme' => 'item_list',
    '#type' => 'ul',
    '#attributes' => [
      'class' => ['links', 'opensuggest-links'],
    ],
    '#items' => $links,
    '#suffix' => '</div>',
  ];

  drupal_add_css(drupal_get_path('module', 'ting_proposed_searches') . '/css/ting_proposed_searches.css');

  return $render;
}

/**
 * Implements hook_panels_pane_content_alter().
 *
 * Force insert proposed searches onto the search results page.
 */
function ting_proposed_searches_panels_pane_content_alter($content, $pane, $args, $contexts) {
  if ($pane->type == 'search_result' && $content->delta == 'result') {
    $search_result = &drupal_static('ting_search_results');

    if ($search_result->getNumTotalObjects() == 0) {
      $search_arg = $args[0];

      $suggestions = ting_proposed_searches_get_suggestions($search_arg);

      $items = [];
      if (!empty($suggestions)) {
        foreach ($suggestions as $k => $suggestion) {
          $items[$k] = $suggestion;
        }

        $link_items = ting_proposed_searches_make_item_list($items);

        $new_content = $content->content;
        if (!empty($link_items)) {
          $new_content .= render($link_items);
        }

        $content->content = $new_content;
      }
    }
  }
}

/**
 * SuggestionService - retrieve suggestions with drupal_http_request()
 *
 * @param string $query
 *
 * @return array
 */
function ting_proposed_searches_get_suggestions($query) {
  $items = [];
  $rest_url = variable_get('opensearch_search_autocomplete_suggestion_url', '');

  $options = [
    'q' => $query,
    'type' => 'all',
  ];

  $url = url($rest_url, ['query' => $options]);

  $result = drupal_http_request($url, [
    'headers' => [
      'Accept' => 'application/json',
    ],
  ]);

  if (!empty($result->data)) {
    $result_data = drupal_json_decode($result->data);
    if (empty($result->error)) {
      if (!empty($result_data['response'])) {
        foreach ($result_data['response']['docs'] as $suggestion) {
          $items[truncate_utf8(strip_tags($suggestion['term']), 256, TRUE, FALSE, 1)] = $suggestion['term'];
        }
      }
    }
    else {
      watchdog('ting_proposed_search', 'Search suggestions error: ' . $result->error . ' (' . $result->code . ")\nURL: $url", [], $severity = WATCHDOG_ERROR);
    }
  }

  return $items;
}
